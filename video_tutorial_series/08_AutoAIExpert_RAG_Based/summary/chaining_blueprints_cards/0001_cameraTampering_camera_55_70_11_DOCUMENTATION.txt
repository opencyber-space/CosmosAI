This document describes a computer vision pipeline (`cameraTampering_camera_55_70_11.json`) designed to detect camera tampering.  The pipeline (`cameraTampering_camera_55_70_11_1`), running on `framequeues-6`, processes a 4 FPS live stream from `camera_55_70_11_1` at 640x360 resolution and uses four methods to detect tampering: scene change (70% threshold), blur (100 unit threshold), brightness manipulation (18% bright pixel ratio), and darkness (20% darkness level).  Each method requires 12 consecutive frames to trigger an alert, sent every 5 minutes to a specified URL and stored in MongoDB, Redis, and MinIO.  The pipeline utilizes a single node (`camTampDet-1`) employing the `node.algorithm.cameraTamper.camTamp_360h_640w:v0.0.1-stable` algorithm with batch processing.  The document details the pipeline's configuration, data flow, and the logic behind each detection method, emphasizing its focus on minimizing false positives through temporal analysis and alert throttling