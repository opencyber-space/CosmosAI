This document describes a Python-based class filtering policy component for object detection pipelines.  It filters objects based on a user-defined list of allowed classes, offering case-sensitive matching and the option to pass unknown classes.  It's designed to be highly efficient (O(n) complexity) with minimal memory footprint, supporting runtime updates to its parameters (allowed classes, case sensitivity, and pass-unknown behavior).  Benchmarks indicate high throughput and accuracy.  The component consumes "classified_detections" in the OD1 format and produces "filtered_detections" in the same format.  Key features include runtime parameter updates via a REST endpoint, low resource requirements (50MB RAM, any CPU), and compatibility with Python 3.6+.  The policy aims to optimize pipelines by reducing downstream processing load.