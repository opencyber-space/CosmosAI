The "Class Confidence Filter" is a Python-based hybrid filtering policy that combines class and confidence filtering with time-based parameter updates.  It filters classified object detections based on allowed classes and a minimum confidence score, both of which can be adjusted dynamically, including through scheduled time-based overrides.  Key features include low memory footprint, O(n) computational complexity, and support for runtime parameter updates via API endpoints.  While generally low-resource, time-based updates require clock synchronization and introduce potential temporal bias.  The policy consumes OD1 formatted classified and scored detections, producing filtered detections in the same format, along with information on the active parameters.  Performance benchmarks indicate high throughput and low latency.