This document describes a Python-based Dwell Time Policy (pol-dwell-time) for temporal filtering.  It detects loitering or persistent objects by tracking their presence over time, triggering events based on configurable thresholds.  Key features include zone-specific thresholds, dynamic parameter updates at runtime, and a minimum detection confidence setting.  The policy has a medium memory footprint, growing with the number of tracked objects, and requires consistent tracking IDs.  Ethical considerations regarding privacy and discriminatory enforcement are noted.  Performance benchmarks indicate it can handle thousands of objects and updates per second.  The policy consumes tracked detections and timestamps, producing loitering alerts, dwell time metadata, and temporal state information.  It relies on standard Python libraries and has a MIT license.