{
  "componentId": "dwell_time",
  "componentType": "node.algorithm.policy",
  "id": "pol-dwell-time",
  "label": "Policy",
  "name": "Dwell Time Policy",
  "category": "temporal_filter",
  "framework": "Python",
  "license": "MIT",
  "repo_url": "https://github.com/aios/policies",

  "modelDetails": {
    "description": "Temporal filtering policy that tracks object persistence over time and triggers events based on loitering or dwell time thresholds",
    "intended_use": "Detect loitering behavior, abandoned objects, or persistent activities in surveillance and monitoring applications",
    "limitations": ["Requires consistent object tracking IDs", "Memory grows with number of tracked objects", "Clock synchronization dependent"],
    "ethical_considerations": "Loitering detection may have privacy implications and potential for discriminatory enforcement"
  },

  "parameters": {
    "computational_complexity": "O(n) where n=number of tracked objects",
    "dependencies": ["python-stdlib", "time"],
    "memory_footprint": "Medium (grows with tracked objects)",
    "processing_type": "temporal_state_tracking"
  },

  "configuration": {
    "loiteringThresholdSeconds": {
      "description": "Time threshold in seconds after which objects are considered loitering",
      "type": "int",
      "required": true,
      "default": 300,
      "range": [10, 3600]
    },
    "resetSeconds": {
      "description": "Time in seconds after which tracking state is reset if object disappears",
      "type": "int", 
      "required": true,
      "default": 30,
      "range": [5, 300]
    },
    "track_id_field": {
      "description": "Field name containing the tracking ID in detection objects",
      "type": "string",
      "default": "track_id"
    },
    "zone_specific": {
      "description": "Whether to apply different thresholds per zone",
      "type": "boolean",
      "default": false
    },
    "zone_thresholds": {
      "description": "Zone-specific loitering thresholds",
      "type": "dict",
      "format": {"zone_name": "threshold_seconds"},
      "default": {}
    },
    "min_detection_confidence": {
      "description": "Minimum confidence to count towards dwell time",
      "type": "float",
      "default": 0.5,
      "range": [0.0, 1.0]
    }
  },

  "dynamic_parameters": {
    "supports_runtime_updates": true,
    "updateable_parameters": ["loiteringThresholdSeconds", "resetSeconds", "zone_thresholds", "min_detection_confidence"],
    "update_latency_ms": 15,
    "api_endpoints": {
      "update_parameters": "/api/v1/policies/dwell_time/update_parameters",
      "update_zone_thresholds": "/api/v1/policies/dwell_time/update_zone_thresholds"
    }
  },

  "runtime": {
    "cpu_intensive": false,
    "gpu_required": false,
    "min_ram_mb": 200,
    "recommended_cpu": "Any modern CPU",
    "python_version": "3.6+",
    "dependencies": {
      "collections": "stdlib"
    }
  },

  "benchmarks": {
    "throughput": {
      "objects_tracked_simultaneously": 1000,
      "state_updates_per_second": 10000,
      "memory_per_tracked_object_kb": 2
    },
    "temporal_accuracy": {
      "timing_precision_ms": 100,
      "state_persistence": "99.9%",
      "false_positive_rate": "<1%"
    }
  },

  "produces": ["loitering_alerts", "dwell_time_metadata", "temporal_state"],
  "consumes": ["tracked_detections", "timestamps"],
  
  "input_formats": ["OD1"],
  "output_formats": ["OD1"],

  "sources": [
    {
      "title": "Loitering Detection in Video Surveillance",
      "url": "https://ieeexplore.ieee.org/document/loitering-detection"
    },
    {
      "title": "Temporal Event Detection", 
      "url": "https://arxiv.org/abs/temporal-event-detection"
    },
    {
      "title": "Object Tracking and Persistence",
      "url": "https://arxiv.org/abs/object-tracking-persistence"
    }
  ],

  "notes": "Essential for security applications. Memory usage scales with number of unique track IDs seen. Consider periodic cleanup for long-running systems."
}
